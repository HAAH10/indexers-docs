"use strict";(self.webpackChunknear_lake_dock=self.webpackChunknear_lake_dock||[]).push([[9041],{8361:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return d},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return k}});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),i=a(8066),s=["components"],l={sidebar_position:4},d="NEAR Lake",c={unversionedId:"projects/near-lake",id:"projects/near-lake",title:"NEAR Lake",description:"https://github.com/near/near-lake/",source:"@site/docs/projects/near-lake.mdx",sourceDirName:"projects",slug:"/projects/near-lake",permalink:"/near-lake-dock/docs/projects/near-lake",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/projects/near-lake.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"NEAR Indexer for Explorer",permalink:"/near-lake-dock/docs/projects/near-indexer-for-explorer"},next:{title:"NEAR Lake Framework",permalink:"/near-lake-dock/docs/projects/near-lake-framework"}},p={},k=[{value:"Description",id:"description",level:2},{value:"Concept",id:"concept",level:2},{value:"How it works",id:"how-it-works",level:2},{value:"Data structure",id:"data-structure",level:3},{value:"How to use it",id:"how-to-use-it",level:2}],h={toc:k};function m(e){var t=e.components,l=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},h,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"near-lake"},"NEAR Lake"),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"GitHub repo")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("a",{parentName:"p",href:"https://github.com/near/near-lake/"},"https://github.com/near/near-lake/")))),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"NEAR Lake pushes the data to AWS S3",src:a(1354).Z,width:"969",height:"500"})),(0,o.kt)("h2",{id:"description"},"Description"),(0,o.kt)("p",null,"NEAR Lake is an indexer built on top of ",(0,o.kt)("a",{parentName:"p",href:"./near-indexer-framework"},"NEAR Indexer Framework")," to watch the network and store all the events as JSON files on AWS S3."),(0,o.kt)("h2",{id:"concept"},"Concept"),(0,o.kt)("p",null,"We used to have ",(0,o.kt)("a",{parentName:"p",href:"./near-indexer-for-explorer"},"NEAR Indexer for Explorer")," that was watching for the network and stored all the events to PostgreSQL database. PostgreSQL became the main bottleneck for us. After some brainstorming sessions and researches we decided to go with SingleStore database."),(0,o.kt)("p",null,"Knowing the fact that ",(0,o.kt)("a",{parentName:"p",href:"https://explorer.near.org"},"NEAR Explorer")," is not the only project that uses the ",(0,o.kt)("a",{parentName:"p",href:"./near-indexer-for-explorer"},"Indexer for Explorer"),"'s database, we wanted to come up with the concept that will allow us to cover even more projects that can benefit from the data from NEAR Protocol."),(0,o.kt)("p",null,"That's why we decided to store the data from the blockchain as JSON files on AWS S3 bucket that can be used as a data source for different projects."),(0,o.kt)("p",null,'As "Indexer for Explorer Remake" project we are going to have ',(0,o.kt)("inlineCode",{parentName:"p"},"near-lake")," as a data writer. There's going to be another project that will read from AWS S3 bucket and will store all the data in SingleStore database. This will replace ",(0,o.kt)("a",{parentName:"p",href:"./near-indexer-for-explorer"},"NEAR Indexer for Explorer")," PostgreSQL database at some moment and will become the main source for NEAR Explorer."),(0,o.kt)("h2",{id:"how-it-works"},"How it works"),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Pagoda Inc. runs NEAR Lake nodes to store the data in JSON format on AWS S3"),(0,o.kt)("p",{parentName:"div"},"There is no need to run NEAR Lake by your own unless you have specific reasons to do that."))),(0,o.kt)("p",null,"There are AWS S3 buckets created:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"near-lake-data-testnet")," (",(0,o.kt)("inlineCode",{parentName:"li"},"eu-central-1")," region)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"near-lake-data-mainnet")," (",(0,o.kt)("inlineCode",{parentName:"li"},"eu-central-1")," region)")),(0,o.kt)("p",null,"All the buckets are set up the way the requester pays for the access. Anyone can read from these buckets by connecting to them with their own AWS credentials to be charged by Amazon."),(0,o.kt)("h3",{id:"data-structure"},"Data structure"),(0,o.kt)("p",null,"The data structure we use is the following:"),(0,o.kt)(i.Z,{className:"language-null",mdxType:"CodeBlock"},"    <",(0,o.kt)("span",{class:"hljs-keyword"},"block_height>/",(0,o.kt)("br",null)),"      ",(0,o.kt)("span",{class:"hljs-keyword"},"block.json",(0,o.kt)("br",null)),"      ",(0,o.kt)("span",{class:"hljs-keyword"},"shard_0.json",(0,o.kt)("br",null)),"      ",(0,o.kt)("span",{class:"hljs-keyword"},"shard_1.json",(0,o.kt)("br",null)),"      ...",(0,o.kt)("br",null),"      ",(0,o.kt)("span",{class:"hljs-keyword"},"shard_N.json")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"<block_height>")," is a 12-character-long ",(0,o.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/std/primitive.u64.html"},(0,o.kt)("inlineCode",{parentName:"a"},"u64")),' string with leading zeros (e.g "000042839521"). See ',(0,o.kt)("a",{parentName:"p",href:"https://github.com/near/near-lake/issues/23"},"this issue for a reasoning"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"block_json")," contains JSON-serialized ",(0,o.kt)("inlineCode",{parentName:"p"},"BlockView")," struct. ",(0,o.kt)("strong",{parentName:"p"},"NB!")," this struct might change in the future, we will announce it"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"shard_N.json")," where N is ",(0,o.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/std/primitive.u64.html"},(0,o.kt)("inlineCode",{parentName:"a"},"u64"))," starting from ",(0,o.kt)("inlineCode",{parentName:"p"},"0"),". Represents the index number of the shard. In order to find out the expected number of shards in the block you can look in ",(0,o.kt)("inlineCode",{parentName:"p"},"block.json")," at ",(0,o.kt)("inlineCode",{parentName:"p"},".header.chunks_included")),(0,o.kt)("h2",{id:"how-to-use-it"},"How to use it"),(0,o.kt)("p",null,"We have created ",(0,o.kt)("a",{parentName:"p",href:"./near-lake-framework"},"NEAR Lake Framework")," to have a simple straightforward way to create an indexer on top of the data stored by NEAR Lake itself."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"NEAR Lake Framework announcement")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"We have announced the release of NEAR Lake Framework on NEAR Gov forum"),(0,o.kt)("p",{parentName:"div"},"Please, read the post ",(0,o.kt)("a",{parentName:"p",href:"https://gov.near.org/t/announcement-near-lake-framework-brand-new-word-in-indexer-building-approach/17668"},"there")))))}m.isMDXComponent=!0},1354:function(e,t,a){t.Z=a.p+"assets/images/near-lake-252b2bf86df7b6123d51f52b1b34d6f1.png"}}]);