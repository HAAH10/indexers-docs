"use strict";(self.webpackChunknear_lake_dock=self.webpackChunknear_lake_dock||[]).push([[166],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(r),d=n,m=c["".concat(s,".").concat(d)]||c[d]||h[d]||o;return r?a.createElement(m,i(i({ref:t},u),{},{components:r})):a.createElement(m,i({ref:t},u))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},1500:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return h}});var a=r(7462),n=r(3366),o=(r(7294),r(3905)),i=["components"],l={slug:"2022-02-11-updates",title:"Feb 11, 2022 Updates",authors:["khorolets","telezhnaya","frol"],tags:["updates"]},s=void 0,p={permalink:"/near-lake-dock/blog/2022-02-11-updates",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-02-11-updates.mdx",source:"@site/blog/2022-02-11-updates.mdx",title:"Feb 11, 2022 Updates",description:"Greeting from the Indexer Team. At least from that part of the team who is not having a vacation yet \ud83e\udd2a",date:"2022-02-11T00:00:00.000Z",formattedDate:"February 11, 2022",tags:[{label:"updates",permalink:"/near-lake-dock/blog/tags/updates"}],readingTime:1.675,truncated:!0,authors:[{name:"Bohdan Khorolets",title:"Indexer Wizard",url:"https://github.com/khorolets",imageURL:"https://github.com/khorolets.png",key:"khorolets"},{name:"Olga Telezhnaya",title:"Data Wizard",url:"https://github.com/telezhnaya",imageURL:"https://github.com/telezhnaya.png",key:"telezhnaya"},{name:"Vlad Frolov",title:"Data Platform Guru",url:"https://github.com/frol",imageURL:"https://github.com/frol.png",key:"frol"}],frontMatter:{slug:"2022-02-11-updates",title:"Feb 11, 2022 Updates",authors:["khorolets","telezhnaya","frol"],tags:["updates"]},prevItem:{title:"Mar 18, 2022 updates",permalink:"/near-lake-dock/blog/2022-02-18-updates"},nextItem:{title:"Feb 4, 2022 Updates",permalink:"/near-lake-dock/blog/2022-02-04-updates"}},u={authorsImageUrls:[void 0,void 0,void 0]},h=[],c={toc:h};function d(e){var t=e.components,r=(0,n.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Greeting from the Indexer Team. At least from that part of the team who is not having a vacation yet \ud83e\udd2a"),(0,o.kt)("p",null,"We've brought some exciting news about our progress this week."),(0,o.kt)("p",null,"Indexer Team is focused on Lightweight NEAR Indexer infrastructure and Indexer for Explorer. The majority of our work this week was about a brand new indexer ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/near/near-lake"},"NEAR Lake"),". Enjoy the weekly update with us:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"In the process of revising the ",(0,o.kt)("inlineCode",{parentName:"li"},"StreamerMessage")," struct (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/near/near-lake/issues/1"},"ref"),") we:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Made an extraction of indexer-related types to a separate crate ",(0,o.kt)("inlineCode",{parentName:"li"},"near-indexer-primitives")," and it is going to be published to crates.io very soon, hopefully. (@khorolets)"),(0,o.kt)("li",{parentName:"ul"},"Moved ",(0,o.kt)("inlineCode",{parentName:"li"},"state_changes")," field from the top-level of the ",(0,o.kt)("inlineCode",{parentName:"li"},"StreamerMessage")," to the ",(0,o.kt)("inlineCode",{parentName:"li"},"IndexerShard")," along with additional post-processing that enables the division of the ",(0,o.kt)("inlineCode",{parentName:"li"},"StateChanges")," by the shard (",(0,o.kt)("a",{parentName:"li",href:"https://github.com/near/nearcore/pull/6255"},"ref PR"),") (@khorolets)"))),(0,o.kt)("li",{parentName:"ul"},"NEAR Lake project is developing:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Now it has a README with the description of the concept and the reason for existing. Please, ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/near/near-lake#readme"},"have a look at the README.md")," (@khorolets)"),(0,o.kt)("li",{parentName:"ul"},"NEAR Lake ecosystem friends arriving at the party. Meet ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/near/near-lake-framework"},"NEAR Lake Framework")," in its early days and first step (@khorolets)\nThe coolest thing about the ",(0,o.kt)("inlineCode",{parentName:"li"},"near-lake-framework")," is that it depends only on ",(0,o.kt)("inlineCode",{parentName:"li"},"near-indexer-primitives")," and doesn't require the entire ",(0,o.kt)("inlineCode",{parentName:"li"},"nearcore"),"! It can be built on Apple M1 and run on it smoothly."),(0,o.kt)("li",{parentName:"ul"},"And a small yet working project ",(0,o.kt)("inlineCode",{parentName:"li"},"near-lake-raw-printer"),", built on top of NEAR Lake Framework has been created. Think of it as about a starting point for the projects that use the NEAR Lake Framework and are capable of doing something with the raw data from the NEAR Lake (@khorolets)")))),(0,o.kt)("p",null,"Both projects ",(0,o.kt)("inlineCode",{parentName:"p"},"near-lake-framework")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"near-lake-raw-printer")," have been just published and missed the README. Also, they are not finalized, so it's too early to start using them."),(0,o.kt)("p",null,"Worth mentioning that we have started the node with NEAR Lake instance for the ",(0,o.kt)("inlineCode",{parentName:"p"},"testnet")," \ud83c\udf89 and it is running from the genesis, filling the AWS S3 bucket with the data."),(0,o.kt)("p",null,"That's all for today, see you next week. Let's keep rocking! \ud83e\udd18"))}d.isMDXComponent=!0}}]);